/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    // `java-library`
    
    id("checkstyle")
    // Apply the java-library plugin to add support for Java Library
	id("java-library-distribution")
}

group = "loanMgmtSystem"
version = "1.0"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
	url = uri("https://hyperledger.jfrog.io/hyperledger/fabric-maven")
	}
	maven {
	url = uri("https://jitpack.io")
	}
}

dependencies {
	
	compileOnly("org.hyperledger.fabric-chaincode-java:fabric-chaincode-shim:2.2.+")
	compileOnly("org.projectlombok:lombok:1.18.30")
    annotationProcessor("org.projectlombok:lombok:1.18.30")
	implementation("com.owlike:genson:1.5")
	
	// This dependency is exported to consumers, that is to say found on their compile classpath.
	api("org.apache.commons:commons-math3:3.6.1")
	
	// This dependency is used internally, and not exposed to consumers on their own compile classpath.
	implementation("com.google.guava:guava:28.2-jre")
	
	// Use JUnit test framework
	// testImplementation("junit:junit:4.12")
	testImplementation("org.junit.jupiter:junit-jupiter:5.10.0")
	testImplementation("org.mockito:mockito-core:5.11.0")
	
    // Use JUnit Jupiter for testing.
    // testImplementation(libs.junit.jupiter)

    // testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api(libs.commons.math3)

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    // implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
// java {
//    toolchain {
//        languageVersion = JavaLanguageVersion.of(21)
//    }
// }


/*tasks.named<Test>("test") {
 *   // Use JUnit Platform for unit tests.
 *   useJUnitPlatform()
 * }
 */
